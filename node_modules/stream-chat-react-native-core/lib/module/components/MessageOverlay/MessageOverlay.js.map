{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_reactNativeGestureHandler","_reactNativeReanimated","_MessageActionList","_OverlayReactionList","_OverlayReactionsAvatar","_ChatContext","_MessageContext","_MessageOverlayContext","_MessagesContext","_OverlayContext","_ThemeContext","_utils","_MessageTextContainer","_OverlayReactions","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","styles","StyleSheet","create","alignEnd","alignItems","alignStart","center","flexGrow","justifyContent","containerInner","borderTopLeftRadius","borderTopRightRadius","borderWidth","overflow","flex","overlayPadding","padding","replyContainer","flexDirection","paddingHorizontal","paddingTop","row","scrollView","Platform","OS","screenHeight","vh","halfScreenHeight","DefaultMessageTextNumberOfLines","MessageOverlayWithContext","props","_message$user","_message$own_reaction","_messagesContext$mess","alignment","ownCapabilities","clientId","files","groupStyles","handleReaction","images","chatContext","message","messageActions","_props$MessageActionL","MessageActionList","DefaultMessageActionList","MessageActionListItem","messageContext","messageReactionTitle","_props$messageTextNum","messageTextNumberOfLines","messagesContext","onlyEmojis","otherAttachments","overlay","overlayOpacity","_props$OverlayReactio","OverlayReactionList","OverlayReactionListDefault","_props$OverlayReactio2","OverlayReactions","DefaultOverlayReactions","_props$OverlayReactio3","OverlayReactionsAvatar","OverlayReactionsAvatarDefault","setOverlay","threadList","videos","isMyMessage","messageReactions","error","isThreadMessage","messageActionProps","_useTheme","useTheme","theme","myMessageTheme","wrapMessageInTheme","user","id","_useState","useState","JSON","stringify","_useState2","_slicedToArray2","myMessageThemeString","setMyMessageThemeString","useEffect","modifiedTheme","useMemo","mergeThemes","style","_ref","_ref$colors","colors","blue_alice","grey_gainsboro","grey_whisper","transparent","white_smoke","_ref$messageSimple$co","messageSimple","content","_ref$messageSimple$co2","container","borderRadiusL","borderRadiusS","_ref$overlay","containerStyle","messageHeight","useSharedValue","messageLayout","x","y","messageWidth","offsetY","translateY","scale","showScreen","fadeScreen","value","withSpring","damping","mass","restDisplacementThreshold","restSpeedThreshold","stiffness","velocity","Keyboard","dismiss","onPan","useAnimatedGestureHandler","onActive","evt","translationY","interpolate","Extrapolate","CLAMP","onFinish","finalYPosition","velocityY","cancelAnimation","withTiming","duration","easing","Easing","out","ease","runOnJS","withDecay","onStart","panStyle","useAnimatedStyle","transform","showScreenStyle","translateX","groupStyle","toLowerCase","hasThreadReplies","reply_count","_ref2","Attachment","FileAttachmentGroup","Gallery","MessageAvatar","Reply","createElement","ChatProvider","__self","__source","fileName","lineNumber","columnNumber","MessagesProvider","MessageProvider","ThemeProvider","mergedStyle","View","pointerEvents","absoluteFillObject","PanGestureHandler","enabled","maxPointers","minDist","onGestureEvent","SafeAreaView","TapGestureHandler","maxDist","onHandlerStateChange","_ref3","state","nativeEvent","State","END","sendReaction","ownReactionTypes","own_reactions","map","reaction","type","onLayout","_ref4","_ref4$nativeEvent$lay","layout","layoutHeight","height","layoutWidth","width","showAvatar","backgroundColor","quoted_message","length","borderBottomLeftRadius","borderBottomRightRadius","borderColor","messageContentOrder","messageContentType","messageContentOrderIndex","quotedMessage","messageContainer","maxWidth","vw","attachment","attachmentIndex","messageId","actions","MessageTextContainer","messageOverlay","_extends2","latest_reactions","reactions","_reaction$user","_reaction$user2","_reaction$user3","_reaction$user4","image","name","user_id","supportedReactions","title","areEqual","prevProps","nextProps","prevAlignment","prevMessage","prevMessageReactionTitle","nextAlignment","nextMessage","nextMessageReactionTitle","alignmentEqual","messageReactionTitleEqual","latestReactionsEqual","Array","isArray","every","_ref5","index","_nextMessage$latest_r","MemoizedMessageOverlay","React","memo","MessageOverlay","_useMessageOverlayCon","useMessageOverlayContext","data","_useOverlayContext","useOverlayContext","componentProps","exports"],"sources":["MessageOverlay.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport { Keyboard, Platform, SafeAreaView, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerGestureEvent,\n  State,\n  TapGestureHandler,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  cancelAnimation,\n  Easing,\n  Extrapolate,\n  interpolate,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedStyle,\n  useSharedValue,\n  withDecay,\n  withSpring,\n  withTiming,\n} from 'react-native-reanimated';\n\nimport { MessageActionList as DefaultMessageActionList } from './MessageActionList';\nimport { OverlayReactionList as OverlayReactionListDefault } from './OverlayReactionList';\nimport { OverlayReactionsAvatar as OverlayReactionsAvatarDefault } from './OverlayReactionsAvatar';\n\nimport { ChatProvider } from '../../contexts/chatContext/ChatContext';\nimport { MessageProvider } from '../../contexts/messageContext/MessageContext';\nimport {\n  MessageOverlayContextValue,\n  MessageOverlayData,\n  useMessageOverlayContext,\n} from '../../contexts/messageOverlayContext/MessageOverlayContext';\n\nimport { MessagesProvider } from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  OverlayProviderProps,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport { mergeThemes, ThemeProvider, useTheme } from '../../contexts/themeContext/ThemeContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\nimport { vh, vw } from '../../utils/utils';\nimport { MessageTextContainer } from '../Message/MessageSimple/MessageTextContainer';\nimport {\n  OverlayReactions as DefaultOverlayReactions,\n  Reaction,\n} from '../MessageOverlay/OverlayReactions';\nimport type { ReplyProps } from '../Reply/Reply';\n\nconst styles = StyleSheet.create({\n  alignEnd: { alignItems: 'flex-end' },\n  alignStart: { alignItems: 'flex-start' },\n  center: {\n    flexGrow: 1,\n    justifyContent: 'center',\n  },\n  containerInner: {\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    borderWidth: 1,\n    overflow: 'hidden',\n  },\n  flex: {\n    flex: 1,\n  },\n  overlayPadding: {\n    padding: 8,\n  },\n  replyContainer: {\n    flexDirection: 'row',\n    paddingHorizontal: 8,\n    paddingTop: 8,\n  },\n  row: { flexDirection: 'row' },\n  scrollView: { overflow: Platform.OS === 'ios' ? 'visible' : 'scroll' },\n});\n\nconst screenHeight = vh(100);\nconst halfScreenHeight = vh(50);\nconst DefaultMessageTextNumberOfLines = 5;\n\nexport type MessageOverlayPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<\n  MessageOverlayContextValue<StreamChatGenerics>,\n  | 'MessageActionList'\n  | 'MessageActionListItem'\n  | 'OverlayReactionList'\n  | 'OverlayReactions'\n  | 'OverlayReactionsAvatar'\n> &\n  Omit<MessageOverlayData<StreamChatGenerics>, 'supportedReactions'> &\n  Pick<OverlayContextValue, 'overlay' | 'setOverlay'> &\n  Pick<\n    OverlayProviderProps<StreamChatGenerics>,\n    | 'error'\n    | 'isMyMessage'\n    | 'isThreadMessage'\n    | 'message'\n    | 'messageReactions'\n    | 'messageTextNumberOfLines'\n  > & {\n    overlayOpacity: Animated.SharedValue<number>;\n    showScreen?: Animated.SharedValue<number>;\n  };\n\nconst MessageOverlayWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageOverlayPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment,\n    ownCapabilities,\n    clientId,\n    files,\n    groupStyles,\n    handleReaction,\n    images,\n    chatContext,\n    message,\n    messageActions,\n    MessageActionList = DefaultMessageActionList,\n    MessageActionListItem,\n    messageContext,\n    messageReactionTitle,\n    messageTextNumberOfLines = DefaultMessageTextNumberOfLines,\n    messagesContext,\n    onlyEmojis,\n    otherAttachments,\n    overlay,\n    overlayOpacity,\n    OverlayReactionList = OverlayReactionListDefault,\n    OverlayReactions = DefaultOverlayReactions,\n    OverlayReactionsAvatar = OverlayReactionsAvatarDefault,\n    setOverlay,\n    threadList,\n    videos,\n    isMyMessage,\n    messageReactions,\n    error,\n    isThreadMessage,\n  } = props;\n\n  const messageActionProps = {\n    error,\n    isMyMessage,\n    isThreadMessage,\n    message,\n    messageReactions,\n  };\n\n  const { theme } = useTheme();\n\n  const myMessageTheme = messagesContext?.myMessageTheme;\n  const wrapMessageInTheme = clientId === message?.user?.id && !!myMessageTheme;\n\n  const [myMessageThemeString, setMyMessageThemeString] = useState(JSON.stringify(myMessageTheme));\n\n  useEffect(() => {\n    if (myMessageTheme) {\n      setMyMessageThemeString(JSON.stringify(myMessageTheme));\n    }\n  }, [myMessageTheme]);\n\n  const modifiedTheme = useMemo(\n    () => mergeThemes({ style: myMessageTheme, theme }),\n    [myMessageThemeString, theme],\n  );\n\n  const {\n    colors: { blue_alice, grey_gainsboro, grey_whisper, transparent, white_smoke },\n    messageSimple: {\n      content: {\n        container: { borderRadiusL, borderRadiusS },\n        containerInner,\n        replyContainer,\n      },\n    },\n    overlay: { container: containerStyle, padding: overlayPadding },\n  } = wrapMessageInTheme ? modifiedTheme : theme;\n\n  const messageHeight = useSharedValue(0);\n  const messageLayout = useSharedValue({ x: 0, y: 0 });\n  const messageWidth = useSharedValue(0);\n\n  const offsetY = useSharedValue(0);\n  const translateY = useSharedValue(0);\n  const scale = useSharedValue(1);\n\n  const showScreen = useSharedValue(0);\n  const fadeScreen = () => {\n    'worklet';\n\n    offsetY.value = 0;\n    translateY.value = 0;\n    scale.value = 1;\n    showScreen.value = withSpring(1, {\n      damping: 600,\n      mass: 0.5,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 0.01,\n      stiffness: 200,\n      velocity: 32,\n    });\n  };\n\n  useEffect(() => {\n    Keyboard.dismiss();\n    fadeScreen();\n  }, []);\n\n  const onPan = useAnimatedGestureHandler<PanGestureHandlerGestureEvent>({\n    onActive: (evt) => {\n      translateY.value = offsetY.value + evt.translationY;\n      overlayOpacity.value = interpolate(\n        translateY.value,\n        [0, halfScreenHeight],\n        [1, 0.75],\n        Extrapolate.CLAMP,\n      );\n      scale.value = interpolate(\n        translateY.value,\n        [0, halfScreenHeight],\n        [1, 0.85],\n        Extrapolate.CLAMP,\n      );\n    },\n    onFinish: (evt) => {\n      const finalYPosition = evt.translationY + evt.velocityY * 0.1;\n\n      if (finalYPosition > halfScreenHeight && translateY.value > 0) {\n        cancelAnimation(translateY);\n        overlayOpacity.value = withTiming(\n          0,\n          {\n            duration: 200,\n            easing: Easing.out(Easing.ease),\n          },\n          () => {\n            runOnJS(setOverlay)('none');\n          },\n        );\n        translateY.value =\n          evt.velocityY > 1000\n            ? withDecay({\n                velocity: evt.velocityY,\n              })\n            : withTiming(screenHeight, {\n                duration: 200,\n                easing: Easing.out(Easing.ease),\n              });\n      } else {\n        translateY.value = withTiming(0);\n        scale.value = withTiming(1);\n        overlayOpacity.value = withTiming(1);\n      }\n    },\n    onStart: () => {\n      cancelAnimation(translateY);\n      offsetY.value = translateY.value;\n    },\n  });\n\n  const panStyle = useAnimatedStyle<ViewStyle>(() => ({\n    transform: [\n      {\n        translateY: translateY.value,\n      },\n      {\n        scale: scale.value,\n      },\n    ],\n  }));\n\n  const showScreenStyle = useAnimatedStyle<ViewStyle>(\n    () => ({\n      transform: [\n        {\n          translateY: interpolate(showScreen.value, [0, 1], [messageHeight.value / 2, 0]),\n        },\n        {\n          translateX: interpolate(\n            showScreen.value,\n            [0, 1],\n            [alignment === 'left' ? -messageWidth.value / 2 : messageWidth.value / 2, 0],\n          ),\n        },\n        {\n          scale: showScreen.value,\n        },\n      ],\n    }),\n    [alignment],\n  );\n\n  const groupStyle = `${alignment}_${(groupStyles?.[0] || 'bottom').toLowerCase()}`;\n\n  const hasThreadReplies = !!message?.reply_count;\n\n  const { Attachment, FileAttachmentGroup, Gallery, MessageAvatar, Reply } = messagesContext || {};\n\n  return (\n    <ChatProvider value={chatContext}>\n      <MessagesProvider value={messagesContext}>\n        <MessageProvider value={messageContext}>\n          <ThemeProvider mergedStyle={wrapMessageInTheme ? modifiedTheme : theme}>\n            <Animated.View\n              pointerEvents={'auto'}\n              style={[StyleSheet.absoluteFillObject, containerStyle]}\n            >\n              <PanGestureHandler\n                enabled={overlay === 'message'}\n                maxPointers={1}\n                minDist={10}\n                onGestureEvent={onPan}\n              >\n                <Animated.View style={[StyleSheet.absoluteFillObject]}>\n                  <SafeAreaView style={styles.flex}>\n                    <TapGestureHandler\n                      maxDist={32}\n                      onHandlerStateChange={({ nativeEvent: { state } }) => {\n                        if (state === State.END) {\n                          setOverlay('none');\n                        }\n                      }}\n                    >\n                      <Animated.View style={[styles.flex, panStyle]}>\n                        {message && (\n                          <View\n                            style={[\n                              styles.center,\n                              styles.overlayPadding,\n                              { padding: overlayPadding },\n                              alignment === 'left' ? styles.alignStart : styles.alignEnd,\n                            ]}\n                          >\n                            {handleReaction && ownCapabilities?.sendReaction ? (\n                              <OverlayReactionList\n                                messageLayout={messageLayout}\n                                ownReactionTypes={\n                                  message?.own_reactions?.map((reaction) => reaction.type) || []\n                                }\n                                showScreen={showScreen}\n                              />\n                            ) : null}\n                            <Animated.View\n                              onLayout={({\n                                nativeEvent: {\n                                  layout: { height: layoutHeight, width: layoutWidth, x, y },\n                                },\n                              }) => {\n                                messageLayout.value = {\n                                  x: alignment === 'left' ? x + layoutWidth : x,\n                                  y,\n                                };\n                                messageWidth.value = layoutWidth;\n                                messageHeight.value = layoutHeight;\n                              }}\n                              style={[styles.alignEnd, styles.row, showScreenStyle]}\n                            >\n                              {alignment === 'left' && MessageAvatar && (\n                                <MessageAvatar {...{ alignment, message, showAvatar: true }} />\n                              )}\n                              <View\n                                pointerEvents='none'\n                                style={[\n                                  styles.containerInner,\n                                  {\n                                    backgroundColor:\n                                      onlyEmojis && !message.quoted_message\n                                        ? transparent\n                                        : otherAttachments?.length\n                                        ? otherAttachments[0].type === 'giphy'\n                                          ? !message.quoted_message\n                                            ? transparent\n                                            : grey_gainsboro\n                                          : blue_alice\n                                        : alignment === 'left'\n                                        ? white_smoke\n                                        : grey_gainsboro,\n                                    borderBottomLeftRadius:\n                                      (groupStyle === 'left_bottom' ||\n                                        groupStyle === 'left_single') &&\n                                      (!hasThreadReplies || threadList)\n                                        ? borderRadiusS\n                                        : borderRadiusL,\n                                    borderBottomRightRadius:\n                                      (groupStyle === 'right_bottom' ||\n                                        groupStyle === 'right_single') &&\n                                      (!hasThreadReplies || threadList)\n                                        ? borderRadiusS\n                                        : borderRadiusL,\n                                    borderColor: grey_whisper,\n                                  },\n                                  (onlyEmojis && !message.quoted_message) ||\n                                  otherAttachments?.length\n                                    ? { borderWidth: 0 }\n                                    : {},\n                                  containerInner,\n                                ]}\n                              >\n                                {messagesContext?.messageContentOrder?.map(\n                                  (messageContentType, messageContentOrderIndex) => {\n                                    switch (messageContentType) {\n                                      case 'quoted_reply':\n                                        return (\n                                          message.quoted_message &&\n                                          Reply && (\n                                            <View\n                                              key={`quoted_reply_${messageContentOrderIndex}`}\n                                              style={[styles.replyContainer, replyContainer]}\n                                            >\n                                              <Reply\n                                                quotedMessage={\n                                                  message.quoted_message as ReplyProps<StreamChatGenerics>['quotedMessage']\n                                                }\n                                                styles={{\n                                                  messageContainer: {\n                                                    maxWidth: vw(60),\n                                                  },\n                                                }}\n                                              />\n                                            </View>\n                                          )\n                                        );\n                                      case 'attachments':\n                                        return otherAttachments?.map(\n                                          (attachment, attachmentIndex) =>\n                                            Attachment && (\n                                              <Attachment\n                                                attachment={attachment}\n                                                key={`${message.id}-${attachmentIndex}`}\n                                              />\n                                            ),\n                                        );\n                                      case 'files':\n                                        return (\n                                          FileAttachmentGroup && (\n                                            <FileAttachmentGroup\n                                              files={files}\n                                              key={`file_attachment_group_${messageContentOrderIndex}`}\n                                              messageId={message.id}\n                                            />\n                                          )\n                                        );\n                                      case 'gallery':\n                                        return (\n                                          Gallery && (\n                                            <Gallery\n                                              alignment={alignment}\n                                              groupStyles={groupStyles}\n                                              hasThreadReplies={!!message?.reply_count}\n                                              images={images}\n                                              key={`gallery_${messageContentOrderIndex}`}\n                                              message={message}\n                                              threadList={threadList}\n                                              videos={videos}\n                                            />\n                                          )\n                                        );\n                                      case 'text':\n                                      default:\n                                        return otherAttachments?.length &&\n                                          otherAttachments[0].actions ? null : (\n                                          <MessageTextContainer<StreamChatGenerics>\n                                            key={`message_text_container_${messageContentOrderIndex}`}\n                                            message={message}\n                                            messageOverlay\n                                            messageTextNumberOfLines={messageTextNumberOfLines}\n                                            onlyEmojis={onlyEmojis}\n                                          />\n                                        );\n                                    }\n                                  },\n                                )}\n                              </View>\n                            </Animated.View>\n                            {messageActions && (\n                              <MessageActionList\n                                MessageActionListItem={MessageActionListItem}\n                                showScreen={showScreen}\n                                {...messageActionProps}\n                                message={message}\n                              />\n                            )}\n                            {!!messageReactionTitle &&\n                            message.latest_reactions &&\n                            message.latest_reactions.length > 0 ? (\n                              <OverlayReactions\n                                alignment={alignment}\n                                OverlayReactionsAvatar={OverlayReactionsAvatar}\n                                reactions={\n                                  message.latest_reactions.map((reaction) => ({\n                                    alignment:\n                                      clientId && clientId === reaction.user?.id ? 'right' : 'left',\n                                    id: reaction?.user?.id || '',\n                                    image: reaction?.user?.image,\n                                    name: reaction?.user?.name || reaction.user_id || '',\n                                    type: reaction.type,\n                                  })) as Reaction[]\n                                }\n                                showScreen={showScreen}\n                                supportedReactions={messagesContext?.supportedReactions}\n                                title={messageReactionTitle}\n                              />\n                            ) : null}\n                          </View>\n                        )}\n                      </Animated.View>\n                    </TapGestureHandler>\n                  </SafeAreaView>\n                </Animated.View>\n              </PanGestureHandler>\n            </Animated.View>\n          </ThemeProvider>\n        </MessageProvider>\n      </MessagesProvider>\n    </ChatProvider>\n  );\n};\n\nconst areEqual = <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>(\n  prevProps: MessageOverlayPropsWithContext<StreamChatGenerics>,\n  nextProps: MessageOverlayPropsWithContext<StreamChatGenerics>,\n) => {\n  const {\n    alignment: prevAlignment,\n    message: prevMessage,\n    messageReactionTitle: prevMessageReactionTitle,\n  } = prevProps;\n  const {\n    alignment: nextAlignment,\n    message: nextMessage,\n    messageReactionTitle: nextMessageReactionTitle,\n  } = nextProps;\n\n  const alignmentEqual = prevAlignment === nextAlignment;\n  if (!alignmentEqual) return false;\n\n  const messageReactionTitleEqual = prevMessageReactionTitle === nextMessageReactionTitle;\n  if (!messageReactionTitleEqual) return false;\n\n  const latestReactionsEqual =\n    Array.isArray(prevMessage?.latest_reactions) && Array.isArray(nextMessage?.latest_reactions)\n      ? prevMessage?.latest_reactions.length === nextMessage?.latest_reactions.length &&\n        prevMessage?.latest_reactions.every(\n          ({ type }, index) => type === nextMessage?.latest_reactions?.[index].type,\n        )\n      : prevMessage?.latest_reactions === nextMessage?.latest_reactions;\n  if (!latestReactionsEqual) return false;\n\n  return true;\n};\n\nconst MemoizedMessageOverlay = React.memo(\n  MessageOverlayWithContext,\n  areEqual,\n) as typeof MessageOverlayWithContext;\n\nexport type MessageOverlayProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<Omit<MessageOverlayPropsWithContext<StreamChatGenerics>, 'overlayOpacity'>> &\n  Pick<MessageOverlayPropsWithContext<StreamChatGenerics>, 'overlayOpacity'> &\n  Pick<\n    MessageOverlayPropsWithContext<StreamChatGenerics>,\n    'isMyMessage' | 'error' | 'isThreadMessage' | 'message' | 'messageReactions'\n  >;\n\n/**\n * MessageOverlay - A high level component which implements all the logic required for a message overlay\n */\nexport const MessageOverlay = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageOverlayProps<StreamChatGenerics>,\n) => {\n  const {\n    data,\n    MessageActionList,\n    MessageActionListItem,\n    OverlayReactionList,\n    OverlayReactions,\n    OverlayReactionsAvatar,\n  } = useMessageOverlayContext<StreamChatGenerics>();\n  const { overlay, setOverlay } = useOverlayContext();\n\n  const componentProps = {\n    MessageActionList: props.MessageActionList || MessageActionList,\n    MessageActionListItem: props.MessageActionListItem || MessageActionListItem,\n    OverlayReactionList:\n      props.OverlayReactionList || OverlayReactionList || data?.OverlayReactionList,\n    OverlayReactions: props.OverlayReactions || OverlayReactions,\n    OverlayReactionsAvatar: props.OverlayReactionsAvatar || OverlayReactionsAvatar,\n  };\n\n  return (\n    <MemoizedMessageOverlay\n      {...{\n        overlay,\n        setOverlay,\n      }}\n      {...componentProps}\n      {...(data || {})}\n      {...props}\n    />\n  );\n};\n"],"mappings":"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"}