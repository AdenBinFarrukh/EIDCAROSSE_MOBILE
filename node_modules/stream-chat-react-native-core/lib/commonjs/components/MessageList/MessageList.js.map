{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_useMessageList","_InlineLoadingMoreIndicator","_InlineLoadingMoreRecentIndicator","_InlineLoadingMoreThreadIndicator","_getLastReceivedMessage","_AttachmentPickerContext","_ChannelContext","_ChatContext","_DebugContext","_ImageGalleryContext","_MessagesContext","_OverlayContext","_PaginatedMessageListContext","_ThemeContext","_ThreadContext","_TranslationContext","_excluded","_this","_jsxFileName","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","_typeof","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","WAIT_FOR_SCROLL_TO_OFFSET_TIMEOUT","MAX_RETRIES_AFTER_SCROLL_FAILURE","styles","StyleSheet","create","container","alignItems","flex","width","contentContainer","flexGrow","paddingBottom","invert","transform","scaleY","invertAndroid","scaleX","listContainer","messagePadding","paddingHorizontal","stickyHeader","position","top","InvertedCellRendererComponent","props","createElement","View","_extends2","style","__self","__source","fileName","lineNumber","columnNumber","keyExtractor","item","id","created_at","toISOString","Date","now","toString","flatListViewabilityConfig","viewAreaCoveragePercentThreshold","MessageListWithContext","_getLastReceivedMessa","LoadingMoreIndicator","threadList","InlineLoadingMoreThreadIndicator","InlineLoadingMoreIndicator","additionalFlatListProps","channel","client","closePicker","DateHeader","disabled","disableTypingIndicator","EmptyStateIndicator","FlatList","_props$FooterComponen","FooterComponent","hasNoMoreRecentMessagesToLoad","_props$HeaderComponen","HeaderComponent","InlineLoadingMoreRecentIndicator","hideStickyDateHeader","initialScrollToFirstUnreadMessage","InlineDateSeparator","InlineUnreadIndicator","_props$inverted","inverted","_props$isListActive","isListActive","legacyImageViewerSwipeBehaviour","loadChannelAroundMessage","loading","LoadingIndicator","loadMore","loadMoreRecent","loadMoreThread","markRead","Message","MessageSystem","myMessageTheme","NetworkDownIndicator","noGroupByUser","onListScroll","onThreadSelect","overlay","reloadChannel","ScrollToBottomButton","selectedPicker","setFlatListRef","setMessages","setSelectedPicker","setTargetedMessage","StickyHeader","targetedMessage","tDateTimeParser","thread","_props$threadList","TypingIndicator","TypingIndicatorContainer","_useTheme","useTheme","theme","white_snow","colors","_theme$messageList","messageList","modifiedTheme","useMemo","mergeThemes","useMessageList","messageListLengthBeforeUpdate","useRef","messageListLengthAfterUpdate","length","topMessageBeforeUpdate","topMessageAfterUpdate","_useState","useState","_useState2","_slicedToArray2","autoscrollToTop","setAutoscrollToTop","onStartReachedTracker","onEndReachedTracker","onStartReachedInPromise","onEndReachedInPromise","flatListRef","_useState3","_useState4","isInitialScrollDone","setInitialScrollDone","channelResyncScrollSet","scrollToDebounceTimeoutRef","initialScrollSettingTimeoutRef","messageIdToScrollToRef","messageIdLastScrolledToRef","_useState5","_useState6","hasMoved","setHasMoved","_useState7","getLastReceivedMessage","_useState8","lastReceivedId","setLastReceivedId","_useState9","_useState10","scrollToBottomButtonVisible","setScrollToBottomButtonVisible","_useState11","_useState12","stickyHeaderDate","setStickyHeaderDate","stickyHeaderDateRef","channelRef","current","updateStickyHeaderDateIfNeeded","viewableItems","_lastItem$item","_stickyHeaderDateRef$","lastItem","pop","isMessageTypeDeleted","type","toDateString","onViewableItemsChanged","_ref","Platform","OS","resetPaginationTrackersRef","useEffect","getShouldMarkReadAutomatically","countUnread","_lastReceivedMessage$","lastReceivedMessage","hasNewMessage","isMyMessage","user","userID","scrollToBottomIfNeeded","_topMessageBeforeUpda","setTimeout","_flatListRef$current","scrollToOffset","offset","maybeCallOnStartReached","shouldApplyAndroidWorkaround","renderItem","_ref2","_message$user","index","message","disconnected","initialized","offlineMode","lastRead","isMessageUnread","messageArrayIndex","msg","isCurrentMessageUnread","showUnreadUnderlay","insertInlineUnreadIndicator","Fragment","testID","wrapMessageInTheme","isMessageWithStylesReadByAndDateSeparator","dateSeparator","date","ThemeProvider","mergedStyle","goToMessage","groupStyles","isTargetedMessage","undefined","quoted_message_id","_ref3","_asyncToGenerator2","_regenerator","mark","_callee","limit","callback","onError","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","then","stop","_x","apply","arguments","maybeCallOnEndReached","_ref4","_callee2","_callee2$","_context2","handleScroll","event","nativeEvent","contentOffset","y","visibleLength","layoutMeasurement","height","contentLength","contentSize","isScrollAtStart","isScrollAtEnd","isScrollAtBottom","showScrollToBottomButton","shouldMarkRead","goToNewMessages","_ref5","_callee3","_callee3$","_context3","scrollToIndexFailedRetryCountRef","failScrollTimeoutId","onScrollToIndexFailedRef","info","animated","averageItemLength","_flatListRef$current2","scrollToIndex","viewPosition","e","console","log","useCallback","messageId","indexOfParentInMessageList","findIndex","clearTimeout","messageIdToScroll","messagesWithImages","filter","attachments","some","attachment","title_link","og_scrape_url","image_url","thumb_url","imageString","map","_message$attachments","join","numberOfMessagesWithImages","threadExists","stickyHeaderFormatDate","getFullYear","tStickyHeaderDate","stickyHeaderDateString","isDayOrMoment","format","dismissImagePicker","onScrollBeginDrag","onScrollEndDrag","refCallback","ref","debugRef","useDebugContext","isDebugModeEnabled","__DEV__","setEventType","setSendEventParams","action","data","renderListEmptyComponent","listType","ListFooterComponent","ListHeaderComponent","StickyHeaderComponent","dateString","additionalFlatListPropsExcludingStyle","contentContainerStyle","rest","_objectWithoutProperties2","backgroundColor","CellRendererComponent","extraData","keyboardShouldPersistTaps","ListEmptyComponent","maintainVisibleContentPosition","autoscrollToTopThreshold","minIndexForVisible","maxToRenderPerBatch","onScroll","onScrollToIndexFailed","onTouchEnd","scrollEnabled","showsVerticalScrollIndicator","viewabilityConfig","onPress","showNotification","unreadCount","MessageList","_useAttachmentPickerC","useAttachmentPickerContext","_useChannelContext","useChannelContext","enableMessageGroupingByUser","error","isChannelActive","scrollToFirstUnreadThreshold","_useChatContext","useChatContext","_useImageGalleryConte","useImageGalleryContext","_useMessagesContext","useMessagesContext","_usePaginatedMessageL","usePaginatedMessageListContext","_useOverlayContext","useOverlayContext","_useThreadContext","useThreadContext","_useTranslationContex","useTranslationContext","t","exports"],"sources":["MessageList.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport {\n  FlatListProps,\n  FlatList as FlatListType,\n  Platform,\n  ScrollViewProps,\n  StyleSheet,\n  View,\n  ViewToken,\n} from 'react-native';\n\nimport {\n  isMessageWithStylesReadByAndDateSeparator,\n  MessageType,\n  useMessageList,\n} from './hooks/useMessageList';\nimport { InlineLoadingMoreIndicator } from './InlineLoadingMoreIndicator';\nimport { InlineLoadingMoreRecentIndicator } from './InlineLoadingMoreRecentIndicator';\nimport { InlineLoadingMoreThreadIndicator } from './InlineLoadingMoreThreadIndicator';\nimport { getLastReceivedMessage } from './utils/getLastReceivedMessage';\n\nimport {\n  AttachmentPickerContextValue,\n  useAttachmentPickerContext,\n} from '../../contexts/attachmentPickerContext/AttachmentPickerContext';\nimport {\n  ChannelContextValue,\n  useChannelContext,\n} from '../../contexts/channelContext/ChannelContext';\nimport { ChatContextValue, useChatContext } from '../../contexts/chatContext/ChatContext';\nimport { useDebugContext } from '../../contexts/debugContext/DebugContext';\nimport {\n  ImageGalleryContextValue,\n  useImageGalleryContext,\n} from '../../contexts/imageGalleryContext/ImageGalleryContext';\nimport {\n  MessagesContextValue,\n  useMessagesContext,\n} from '../../contexts/messagesContext/MessagesContext';\nimport {\n  OverlayContextValue,\n  useOverlayContext,\n} from '../../contexts/overlayContext/OverlayContext';\nimport {\n  PaginatedMessageListContextValue,\n  usePaginatedMessageListContext,\n} from '../../contexts/paginatedMessageListContext/PaginatedMessageListContext';\nimport { mergeThemes, ThemeProvider, useTheme } from '../../contexts/themeContext/ThemeContext';\nimport { ThreadContextValue, useThreadContext } from '../../contexts/threadContext/ThreadContext';\nimport {\n  isDayOrMoment,\n  TranslationContextValue,\n  useTranslationContext,\n} from '../../contexts/translationContext/TranslationContext';\n\nimport type { DefaultStreamChatGenerics } from '../../types/types';\n\nconst WAIT_FOR_SCROLL_TO_OFFSET_TIMEOUT = 150;\nconst MAX_RETRIES_AFTER_SCROLL_FAILURE = 10;\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    width: '100%',\n  },\n  contentContainer: {\n    flexGrow: 1,\n    /**\n     * paddingBottom is set to 4 to account for the default date\n     * header and inline indicator alignment. The top margin is 8\n     * on the header but 4 on the inline date, this adjusts the spacing\n     * to allow the \"first\" inline date to align with the date header.\n     */\n    paddingBottom: 4,\n  },\n  flex: { flex: 1 },\n  invert: { transform: [{ scaleY: -1 }] },\n  invertAndroid: {\n    // Invert the Y AND X axis to prevent a react native issue that can lead to ANRs on android 13\n    // details: https://github.com/Expensify/App/pull/12820\n    transform: [{ scaleX: -1 }, { scaleY: -1 }],\n  },\n  listContainer: {\n    flex: 1,\n    width: '100%',\n  },\n  messagePadding: {\n    paddingHorizontal: 8,\n  },\n  stickyHeader: {\n    position: 'absolute',\n    top: 0,\n  },\n});\n\nconst InvertedCellRendererComponent = (props: React.PropsWithChildren<unknown>) => (\n  <View {...props} style={styles.invertAndroid} />\n);\n\nconst keyExtractor = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  item: MessageType<StreamChatGenerics>,\n) => {\n  if (item.id) return item.id;\n  if (item.created_at)\n    return typeof item.created_at === 'string' ? item.created_at : item.created_at.toISOString();\n  return Date.now().toString();\n};\n\nconst flatListViewabilityConfig = {\n  viewAreaCoveragePercentThreshold: 1,\n};\n\ntype MessageListPropsWithContext<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Pick<AttachmentPickerContextValue, 'closePicker' | 'selectedPicker' | 'setSelectedPicker'> &\n  Pick<\n    ChannelContextValue<StreamChatGenerics>,\n    | 'channel'\n    | 'disabled'\n    | 'EmptyStateIndicator'\n    | 'hideStickyDateHeader'\n    | 'loadChannelAroundMessage'\n    | 'loading'\n    | 'LoadingIndicator'\n    | 'markRead'\n    | 'NetworkDownIndicator'\n    | 'reloadChannel'\n    | 'scrollToFirstUnreadThreshold'\n    | 'setTargetedMessage'\n    | 'StickyHeader'\n    | 'targetedMessage'\n  > &\n  Pick<ChatContextValue<StreamChatGenerics>, 'client'> &\n  Pick<ImageGalleryContextValue<StreamChatGenerics>, 'setMessages'> &\n  Pick<\n    PaginatedMessageListContextValue<StreamChatGenerics>,\n    'hasNoMoreRecentMessagesToLoad' | 'loadMore' | 'loadMoreRecent'\n  > &\n  Pick<OverlayContextValue, 'overlay'> &\n  Pick<\n    MessagesContextValue<StreamChatGenerics>,\n    | 'DateHeader'\n    | 'disableTypingIndicator'\n    | 'FlatList'\n    | 'initialScrollToFirstUnreadMessage'\n    | 'InlineDateSeparator'\n    | 'InlineUnreadIndicator'\n    | 'legacyImageViewerSwipeBehaviour'\n    | 'Message'\n    | 'ScrollToBottomButton'\n    | 'MessageSystem'\n    | 'myMessageTheme'\n    | 'TypingIndicator'\n    | 'TypingIndicatorContainer'\n  > &\n  Pick<ThreadContextValue<StreamChatGenerics>, 'loadMoreThread' | 'thread'> &\n  Pick<TranslationContextValue, 't' | 'tDateTimeParser'> & {\n    /**\n     * Besides existing (default) UX behavior of underlying FlatList of MessageList component, if you want\n     * to attach some additional props to underlying FlatList, you can add it to following prop.\n     *\n     * You can find list of all the available FlatList props here - https://facebook.github.io/react-native/docs/flatlist#props\n     *\n     * **NOTE** Don't use `additionalFlatListProps` to get access to ref of flatlist. Use `setFlatListRef` instead.\n     *\n     * e.g.\n     * ```js\n     * <MessageList\n     *  additionalFlatListProps={{ bounces: true, keyboardDismissMode: true }} />\n     * ```\n     */\n    additionalFlatListProps?: Partial<FlatListProps<MessageType<StreamChatGenerics>>>;\n    /**\n     * UI component for footer of message list. By default message list will use `InlineLoadingMoreIndicator`\n     * as FooterComponent. If you want to implement your own inline loading indicator, you can access `loadingMore`\n     * from context.\n     *\n     * This is a [ListHeaderComponent](https://facebook.github.io/react-native/docs/flatlist#listheadercomponent) of FlatList\n     * used in MessageList. Should be used for header by default if inverted is true or defaulted\n     */\n    FooterComponent?: React.ComponentType;\n    /**\n     * UI component for header of message list. By default message list will use `InlineLoadingMoreRecentIndicator`\n     * as HeaderComponent. If you want to implement your own inline loading indicator, you can access `loadingMoreRecent`\n     * from context.\n     *\n     * This is a [ListFooterComponent](https://facebook.github.io/react-native/docs/flatlist#listheadercomponent) of FlatList\n     * used in MessageList. Should be used for header if inverted is false\n     */\n    HeaderComponent?: React.ComponentType;\n    /** Whether or not the FlatList is inverted. Defaults to true */\n    inverted?: boolean;\n    isListActive?: boolean;\n    /** Turn off grouping of messages by user */\n    noGroupByUser?: boolean;\n    onListScroll?: ScrollViewProps['onScroll'];\n    /**\n     * Handler to open the thread on message. This is callback for touch event for replies button.\n     *\n     * @param message A message object to open the thread upon.\n     */\n    onThreadSelect?: (message: ThreadContextValue<StreamChatGenerics>['thread']) => void;\n    /**\n     * Use `setFlatListRef` to get access to ref to inner FlatList.\n     *\n     * e.g.\n     * ```js\n     * <MessageList\n     *  setFlatListRef={(ref) => {\n     *    // Use ref for your own good\n     *  }}\n     * ```\n     */\n    setFlatListRef?: (ref: FlatListType<MessageType<StreamChatGenerics>> | null) => void;\n    /**\n     * Boolean whether or not the Messages in the MessageList are part of a Thread\n     **/\n    threadList?: boolean;\n  };\n\n/**\n * The message list component renders a list of messages. It consumes the following contexts:\n *\n * [ChannelContext](https://getstream.io/chat/docs/sdk/reactnative/contexts/channel-context/)\n * [ChatContext](https://getstream.io/chat/docs/sdk/reactnative/contexts/chat-context/)\n * [MessagesContext](https://getstream.io/chat/docs/sdk/reactnative/contexts/messages-context/)\n * [ThreadContext](https://getstream.io/chat/docs/sdk/reactnative/contexts/thread-context/)\n * [TranslationContext](https://getstream.io/chat/docs/sdk/reactnative/contexts/translation-context/)\n */\nconst MessageListWithContext = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageListPropsWithContext<StreamChatGenerics>,\n) => {\n  const LoadingMoreIndicator = props.threadList\n    ? InlineLoadingMoreThreadIndicator\n    : InlineLoadingMoreIndicator;\n  const {\n    additionalFlatListProps,\n    channel,\n    client,\n    closePicker,\n    DateHeader,\n    disabled,\n    disableTypingIndicator,\n    EmptyStateIndicator,\n    FlatList,\n    FooterComponent = LoadingMoreIndicator,\n    hasNoMoreRecentMessagesToLoad,\n    HeaderComponent = InlineLoadingMoreRecentIndicator,\n    hideStickyDateHeader,\n    initialScrollToFirstUnreadMessage,\n    InlineDateSeparator,\n    InlineUnreadIndicator,\n    inverted = true,\n    isListActive = false,\n    legacyImageViewerSwipeBehaviour,\n    loadChannelAroundMessage,\n    loading,\n    LoadingIndicator,\n    loadMore,\n    loadMoreRecent,\n    loadMoreThread,\n    markRead,\n    Message,\n    MessageSystem,\n    myMessageTheme,\n    NetworkDownIndicator,\n    noGroupByUser,\n    onListScroll,\n    onThreadSelect,\n    overlay,\n    reloadChannel,\n    ScrollToBottomButton,\n    selectedPicker,\n    setFlatListRef,\n    setMessages,\n    setSelectedPicker,\n    setTargetedMessage,\n    StickyHeader,\n    targetedMessage,\n    tDateTimeParser,\n    thread,\n    threadList = false,\n    TypingIndicator,\n    TypingIndicatorContainer,\n  } = props;\n\n  const { theme } = useTheme();\n\n  const {\n    colors: { white_snow },\n    messageList: { container, contentContainer, listContainer },\n  } = theme;\n\n  const modifiedTheme = useMemo(\n    () => mergeThemes({ style: myMessageTheme, theme }),\n    [myMessageTheme, theme],\n  );\n\n  const messageList = useMessageList<StreamChatGenerics>({\n    noGroupByUser,\n    threadList,\n  });\n  const messageListLengthBeforeUpdate = useRef(0);\n  const messageListLengthAfterUpdate = messageList.length;\n\n  /**\n   * We need topMessage and channelLastRead values to set the initial scroll position.\n   * So these values only get used if `initialScrollToFirstUnreadMessage` prop is true.\n   */\n  const topMessageBeforeUpdate = useRef<MessageType<StreamChatGenerics>>();\n  const topMessageAfterUpdate = messageList[messageList.length - 1];\n\n  const [autoscrollToTop, setAutoscrollToTop] = useState(false);\n\n  /**\n   * We want to call onEndReached and onStartReached only once, per content length.\n   * We keep track of calls to these functions per content length, with following trackers.\n   */\n  const onStartReachedTracker = useRef<Record<number, boolean>>({});\n  const onEndReachedTracker = useRef<Record<number, boolean>>({});\n\n  const onStartReachedInPromise = useRef<Promise<void> | null>(null);\n  const onEndReachedInPromise = useRef<Promise<void> | null>(null);\n\n  const flatListRef = useRef<FlatListType<MessageType<StreamChatGenerics>> | null>(null);\n\n  /**\n   * Flag to track if the initial scroll has been set\n   * If the prop `initialScrollToFirstUnreadMessage` was enabled, then we scroll to the unread msg and set it to true\n   * If not, the default offset of 0 for flatList means that it has been set already\n   */\n  const [isInitialScrollDone, setInitialScrollDone] = useState(!initialScrollToFirstUnreadMessage);\n  const channelResyncScrollSet = useRef<boolean>(true);\n\n  /**\n   * The timeout id used to debounce our scrollToIndex calls on messageList updates\n   */\n  const scrollToDebounceTimeoutRef = useRef<NodeJS.Timeout>();\n\n  /**\n   * The timeout id used to lazier load the initial scroll set flag\n   */\n  const initialScrollSettingTimeoutRef = useRef<NodeJS.Timeout>();\n\n  /**\n   * If a messageId was requested to scroll to but was unloaded,\n   * this flag keeps track of it to scroll to it after loading the message\n   */\n  const messageIdToScrollToRef = useRef<string>();\n  /**\n   * Last messageID that was scrolled to after loading a new message list,\n   * this flag keeps track of it so that we dont scroll to it again on target message set\n   */\n  const messageIdLastScrolledToRef = useRef<string>();\n  const [hasMoved, setHasMoved] = useState(false);\n  const [lastReceivedId, setLastReceivedId] = useState(getLastReceivedMessage(messageList)?.id);\n  const [scrollToBottomButtonVisible, setScrollToBottomButtonVisible] = useState(false);\n\n  const [stickyHeaderDate, setStickyHeaderDate] = useState<Date | undefined>();\n  const stickyHeaderDateRef = useRef<Date | undefined>();\n\n  // ref for channel to use in useEffect without triggering it on channel change\n  const channelRef = useRef(channel);\n  channelRef.current = channel;\n\n  const updateStickyHeaderDateIfNeeded = (viewableItems: ViewToken[]) => {\n    if (viewableItems.length) {\n      const lastItem = viewableItems.pop() as {\n        item: MessageType<StreamChatGenerics>;\n      };\n\n      const isMessageTypeDeleted = lastItem.item.type === 'deleted';\n\n      if (\n        lastItem?.item?.created_at &&\n        !isMessageTypeDeleted &&\n        typeof lastItem.item.created_at !== 'string' &&\n        lastItem.item.created_at.toDateString() !== stickyHeaderDateRef.current?.toDateString()\n      ) {\n        stickyHeaderDateRef.current = lastItem.item.created_at;\n        setStickyHeaderDate(lastItem.item.created_at);\n      }\n    }\n  };\n\n  /**\n   * FlatList doesn't accept changeable function for onViewableItemsChanged prop.\n   * Thus useRef.\n   */\n  const onViewableItemsChanged = useRef(\n    ({ viewableItems }: { viewableItems: ViewToken[] | undefined }) => {\n      /**\n       * When a new message comes in, list scrolls down to the bottom automatically (using prop `maintainVisibleContentPosition`)\n       * and we mark the channel as read from handleScroll function.\n       * Although this logic is dependent on the fact that `onScroll` event gets triggered during this process.\n       * But for Android, this event is not triggered when messages length is lesser than visible screen height.\n       *\n       * And thus we need to check if the message list length is lesser than visible screen height and mark the channel as read.\n       */\n      if (\n        Platform.OS === 'android' &&\n        viewableItems?.length &&\n        viewableItems?.length >= messageListLengthBeforeUpdate.current\n      ) {\n        channel.markRead();\n      }\n\n      if (viewableItems && !hideStickyDateHeader) {\n        updateStickyHeaderDateIfNeeded(viewableItems);\n      }\n    },\n  );\n\n  /**\n   * Resets the pagination trackers, doing so cancels currently scheduled loading more calls\n   */\n  const resetPaginationTrackersRef = useRef(() => {\n    onStartReachedTracker.current = {};\n    onEndReachedTracker.current = {};\n  });\n\n  useEffect(() => {\n    setScrollToBottomButtonVisible(false);\n  }, [disabled]);\n\n  useEffect(() => {\n    const getShouldMarkReadAutomatically = (): boolean => {\n      if (loading || !channel) {\n        // nothing to do\n        return false;\n      } else if (channel.countUnread() > 0) {\n        if (!initialScrollToFirstUnreadMessage) {\n          /*\n           * In this case MessageList won't scroll to first unread message when opened, so we can mark\n           * the channel as read right after opening.\n           * */\n          return true;\n        } else {\n          /*\n           * In this case MessageList will be opened to first unread message.\n           * But if there are were not enough unread messages, so that scrollToBottom button was not shown\n           * then MessageList won't need to scroll up. So we can safely mark the channel as read right after opening.\n           *\n           * NOTE: we must ensure that initial scroll is done, otherwise we do not wait till the unread scroll is finished\n           * */\n          if (scrollToBottomButtonVisible) return false;\n          /* if scrollToBottom button was not visible, wait till\n           * - initial scroll is done (indicates that if scrolling to index was needed it was triggered)\n           * */\n          return isInitialScrollDone;\n        }\n      }\n      return false;\n    };\n\n    if (getShouldMarkReadAutomatically()) {\n      markRead();\n    }\n  }, [loading, scrollToBottomButtonVisible, isInitialScrollDone]);\n\n  useEffect(() => {\n    const lastReceivedMessage = getLastReceivedMessage(messageList);\n\n    const hasNewMessage = lastReceivedId !== lastReceivedMessage?.id;\n    const isMyMessage = lastReceivedMessage?.user?.id === client.userID;\n\n    setLastReceivedId(lastReceivedMessage?.id);\n\n    /**\n     * Scroll down when\n     * 1. you send a new message to channel\n     * 2. new message list is small than the one before update - channel has resynced\n     * 3. created_at timestamp of top message before update is lesser than created_at timestamp of top message after update - channel has resynced\n     */\n    const scrollToBottomIfNeeded = () => {\n      if (!client || !channel || messageList.length === 0) {\n        return;\n      }\n      if (\n        (hasNewMessage && isMyMessage) ||\n        messageListLengthAfterUpdate < messageListLengthBeforeUpdate.current ||\n        (topMessageBeforeUpdate.current?.created_at &&\n          topMessageAfterUpdate?.created_at &&\n          topMessageBeforeUpdate.current.created_at < topMessageAfterUpdate.created_at)\n      ) {\n        channelResyncScrollSet.current = false;\n        setScrollToBottomButtonVisible(false);\n        resetPaginationTrackersRef.current();\n\n        setTimeout(() => {\n          flatListRef.current?.scrollToOffset({\n            offset: 0,\n          });\n        }, 50);\n        setTimeout(() => {\n          channelResyncScrollSet.current = true;\n          if (channel.countUnread() > 0) {\n            markRead();\n          }\n        }, 500);\n      }\n    };\n\n    if (threadList || hasNoMoreRecentMessagesToLoad) {\n      scrollToBottomIfNeeded();\n    } else {\n      setScrollToBottomButtonVisible(true);\n    }\n\n    if (\n      !hasNoMoreRecentMessagesToLoad &&\n      flatListRef.current &&\n      messageListLengthBeforeUpdate.current === 0 &&\n      messageListLengthAfterUpdate < 10\n    ) {\n      /**\n       * Trigger onStartReached on first load, if messages are not enough to fill the screen.\n       * This is important especially for android, where you can't overscroll.\n       */\n      maybeCallOnStartReached(10);\n    }\n\n    messageListLengthBeforeUpdate.current = messageListLengthAfterUpdate;\n    topMessageBeforeUpdate.current = topMessageAfterUpdate;\n  }, [messageListLengthAfterUpdate, topMessageAfterUpdate?.id]);\n\n  useEffect(() => {\n    setAutoscrollToTop(hasNoMoreRecentMessagesToLoad);\n  }, [messageList, hasNoMoreRecentMessagesToLoad]);\n\n  const shouldApplyAndroidWorkaround = inverted && Platform.OS === 'android';\n\n  const renderItem = ({\n    index,\n    item: message,\n  }: {\n    index: number;\n    item: MessageType<StreamChatGenerics>;\n  }) => {\n    if (!channel || channel.disconnected || (!channel.initialized && !channel.offlineMode))\n      return null;\n\n    const lastRead = channel.lastRead();\n\n    function isMessageUnread(messageArrayIndex: number): boolean {\n      const msg = messageList?.[messageArrayIndex];\n      if (lastRead && msg?.created_at) {\n        return lastRead < msg.created_at;\n      }\n      return false;\n    }\n\n    const isCurrentMessageUnread = isMessageUnread(index);\n    const showUnreadUnderlay = isCurrentMessageUnread && scrollToBottomButtonVisible;\n    const insertInlineUnreadIndicator = showUnreadUnderlay && !isMessageUnread(index + 1); // show only if previous message is read\n\n    if (message.type === 'system') {\n      return (\n        <>\n          <View testID={`message-list-item-${index}`}>\n            <MessageSystem message={message} style={styles.messagePadding} />\n          </View>\n          {insertInlineUnreadIndicator && <InlineUnreadIndicator />}\n        </>\n      );\n    }\n\n    const wrapMessageInTheme = client.userID === message.user?.id && !!myMessageTheme;\n    return wrapMessageInTheme ? (\n      <>\n        {shouldApplyAndroidWorkaround &&\n          isMessageWithStylesReadByAndDateSeparator(message) &&\n          message.dateSeparator && <InlineDateSeparator date={message.dateSeparator} />}\n        <ThemeProvider mergedStyle={modifiedTheme}>\n          <View testID={`message-list-item-${index}`}>\n            <Message\n              goToMessage={goToMessage}\n              groupStyles={\n                isMessageWithStylesReadByAndDateSeparator(message) ? message.groupStyles : []\n              }\n              isTargetedMessage={targetedMessage === message.id}\n              lastReceivedId={lastReceivedId === message.id ? lastReceivedId : undefined}\n              message={message}\n              onThreadSelect={onThreadSelect}\n              showUnreadUnderlay={showUnreadUnderlay}\n              style={styles.messagePadding}\n              threadList={threadList}\n            />\n          </View>\n        </ThemeProvider>\n        {!shouldApplyAndroidWorkaround &&\n          isMessageWithStylesReadByAndDateSeparator(message) &&\n          message.dateSeparator && <InlineDateSeparator date={message.dateSeparator} />}\n        {/* Adding indicator below the messages, since the list is inverted */}\n        {insertInlineUnreadIndicator && <InlineUnreadIndicator />}\n      </>\n    ) : (\n      <>\n        <View testID={`message-list-item-${index}`}>\n          {shouldApplyAndroidWorkaround &&\n            isMessageWithStylesReadByAndDateSeparator(message) &&\n            message.dateSeparator && <InlineDateSeparator date={message.dateSeparator} />}\n          <Message\n            goToMessage={goToMessage}\n            groupStyles={\n              isMessageWithStylesReadByAndDateSeparator(message) ? message.groupStyles : []\n            }\n            isTargetedMessage={targetedMessage === message.id}\n            lastReceivedId={\n              lastReceivedId === message.id || message.quoted_message_id\n                ? lastReceivedId\n                : undefined\n            }\n            message={message}\n            onThreadSelect={onThreadSelect}\n            showUnreadUnderlay={showUnreadUnderlay}\n            style={styles.messagePadding}\n            threadList={threadList}\n          />\n        </View>\n        {!shouldApplyAndroidWorkaround &&\n          isMessageWithStylesReadByAndDateSeparator(message) &&\n          message.dateSeparator && <InlineDateSeparator date={message.dateSeparator} />}\n        {/* Adding indicator below the messages, since the list is inverted */}\n        {insertInlineUnreadIndicator && <InlineUnreadIndicator />}\n      </>\n    );\n  };\n\n  /**\n   * We are keeping full control on message pagination, and not relying on react-native for it.\n   * The reasons being,\n   * 1. FlatList doesn't support onStartReached prop\n   * 2. `onEndReached` function prop available on react-native, gets executed\n   *    once per content length (and thats actually a nice optimization strategy).\n   *    But it also means, we always need to prioritize onEndReached above our\n   *    logic for `onStartReached`.\n   * 3. `onEndReachedThreshold` prop decides - at which scroll position to call `onEndReached`.\n   *    Its a factor of content length (which is necessary for \"real\" infinite scroll). But on\n   *    the other hand, it also makes calls to `onEndReached` (and this `channel.query`) way\n   *    too early during scroll, which we don't really need. So we are going to instead\n   *    keep some fixed offset distance, to decide when to call `loadMore` or `loadMoreRecent`.\n   *\n   * We are still gonna keep the optimization, which react-native does - only call onEndReached\n   * once per content length.\n   */\n\n  /**\n   * 1. Makes a call to `loadMoreRecent` function, which queries more recent messages.\n   * 2. Ensures that we call `loadMoreRecent`, once per content length\n   * 3. If the call to `loadMore` is in progress, we wait for it to finish to make sure scroll doesn't jump.\n   */\n  const maybeCallOnStartReached = async (limit?: number) => {\n    // If onStartReached has already been called for given data length, then ignore.\n    if (messageList?.length && onStartReachedTracker.current[messageList.length]) {\n      return;\n    }\n\n    if (messageList?.length) {\n      onStartReachedTracker.current[messageList.length] = true;\n    }\n\n    const callback = () => {\n      onStartReachedInPromise.current = null;\n\n      return Promise.resolve();\n    };\n\n    const onError = () => {\n      /** Release the onStartReached trigger after 2 seconds, to try again */\n      setTimeout(() => {\n        onStartReachedTracker.current = {};\n      }, 2000);\n    };\n\n    // If onEndReached is in progress, better to wait for it to finish for smooth UX\n    if (onEndReachedInPromise.current) {\n      await onEndReachedInPromise.current;\n      onStartReachedInPromise.current = loadMoreRecent(limit).then(callback).catch(onError);\n    } else {\n      onStartReachedInPromise.current = loadMoreRecent(limit).then(callback).catch(onError);\n    }\n  };\n\n  /**\n   * 1. Makes a call to `loadMore` function, which queries more older messages.\n   * 2. Ensures that we call `loadMore`, once per content length\n   * 3. If the call to `loadMoreRecent` is in progress, we wait for it to finish to make sure scroll doesn't jump.\n   */\n  const maybeCallOnEndReached = async () => {\n    // If onEndReached has already been called for given messageList length, then ignore.\n    if (messageList?.length && onEndReachedTracker.current[messageList.length]) {\n      return;\n    }\n\n    if (messageList?.length) {\n      onEndReachedTracker.current[messageList.length] = true;\n    }\n\n    const callback = () => {\n      onEndReachedInPromise.current = null;\n      return Promise.resolve();\n    };\n\n    const onError = () => {\n      /** Release the onEndReachedTracker trigger after 2 seconds, to try again */\n      setTimeout(() => {\n        onEndReachedTracker.current = {};\n      }, 2000);\n    };\n\n    // If onStartReached is in progress, better to wait for it to finish for smooth UX\n    if (onStartReachedInPromise.current) {\n      await onStartReachedInPromise.current;\n      onEndReachedInPromise.current = (threadList ? loadMoreThread() : loadMore())\n        .then(callback)\n        .catch(onError);\n    } else {\n      onEndReachedInPromise.current = (threadList ? loadMoreThread() : loadMore())\n        .then(callback)\n        .catch(onError);\n    }\n  };\n\n  /**\n   * Following if condition covers following cases:\n   * 1. If I scroll up -> show scrollToBottom button.\n   * 2. If I scroll to bottom of screen\n   *    |-> hide scrollToBottom button.\n   *    |-> if channel is unread, call markRead().\n   */\n  const handleScroll: ScrollViewProps['onScroll'] = (event) => {\n    if (!channel || !channelResyncScrollSet.current) {\n      return;\n    }\n\n    const offset = event.nativeEvent.contentOffset.y;\n    const visibleLength = event.nativeEvent.layoutMeasurement.height;\n    const contentLength = event.nativeEvent.contentSize.height;\n    // Check if scroll has reached either start of end of list.\n    const isScrollAtStart = offset < 100;\n    const isScrollAtEnd = contentLength - visibleLength - offset < 100;\n\n    if (isScrollAtStart) {\n      maybeCallOnStartReached();\n    }\n\n    if (isScrollAtEnd) {\n      maybeCallOnEndReached();\n    }\n\n    // Show scrollToBottom button once scroll position goes beyond 150.\n    const isScrollAtBottom = offset <= 150;\n    const showScrollToBottomButton = !isScrollAtBottom || !hasNoMoreRecentMessagesToLoad;\n\n    const shouldMarkRead =\n      !threadList && offset <= 0 && hasNoMoreRecentMessagesToLoad && channel.countUnread() > 0;\n\n    if (shouldMarkRead) {\n      markRead();\n    }\n\n    setScrollToBottomButtonVisible(showScrollToBottomButton);\n\n    if (onListScroll) {\n      onListScroll(event);\n    }\n  };\n\n  const goToNewMessages = async () => {\n    if (!hasNoMoreRecentMessagesToLoad) {\n      resetPaginationTrackersRef.current();\n      await reloadChannel();\n    } else if (flatListRef.current) {\n      flatListRef.current.scrollToOffset({\n        offset: 0,\n      });\n    }\n\n    setScrollToBottomButtonVisible(false);\n    if (!threadList) {\n      markRead();\n    }\n  };\n\n  const scrollToIndexFailedRetryCountRef = useRef<number>(0);\n  const failScrollTimeoutId = useRef<NodeJS.Timeout>();\n  const onScrollToIndexFailedRef = useRef<\n    FlatListProps<MessageType<StreamChatGenerics>>['onScrollToIndexFailed']\n  >((info) => {\n    // We got a failure as we tried to scroll to an item that was outside the render length\n    if (!flatListRef.current) return;\n    // we don't know the actual size of all items but we can see the average, so scroll to the closest offset\n    flatListRef.current.scrollToOffset({\n      animated: false,\n      offset: info.averageItemLength * info.index,\n    });\n    // since we used only an average offset... we won't go to the center of the item yet\n    // with a little delay to wait for scroll to offset to complete, we can then scroll to the index\n    failScrollTimeoutId.current = setTimeout(() => {\n      try {\n        flatListRef.current?.scrollToIndex({\n          animated: false,\n          index: info.index,\n          viewPosition: 0.5, // try to place message in the center of the screen\n        });\n        if (messageIdLastScrolledToRef.current) {\n          setTargetedMessage(messageIdLastScrolledToRef.current);\n        }\n        scrollToIndexFailedRetryCountRef.current = 0;\n      } catch (e) {\n        if (\n          !onScrollToIndexFailedRef.current ||\n          scrollToIndexFailedRetryCountRef.current > MAX_RETRIES_AFTER_SCROLL_FAILURE\n        ) {\n          console.log(\n            `Scrolling to index failed after ${MAX_RETRIES_AFTER_SCROLL_FAILURE} retries`,\n            e,\n          );\n          scrollToIndexFailedRetryCountRef.current = 0;\n          return;\n        }\n        // At some cases the index we're trying to scroll to, doesn't exist yet in the messageList\n        // Scrolling to an index not in range of the Flatlist's data will result in a crash that\n        // won't call onScrollToIndexFailed.\n        // By catching this error we retry scrolling by calling onScrollToIndexFailedRef\n        scrollToIndexFailedRetryCountRef.current += 1;\n        onScrollToIndexFailedRef.current(info);\n      }\n    }, WAIT_FOR_SCROLL_TO_OFFSET_TIMEOUT);\n\n    // Only when index is greater than 0 and in range of items in FlatList\n    // this onScrollToIndexFailed will be called again\n  });\n\n  const goToMessage = useCallback(\n    (messageId: string) => {\n      const indexOfParentInMessageList = messageList.findIndex(\n        (message) => message?.id === messageId,\n      );\n      if (indexOfParentInMessageList !== -1 && flatListRef.current) {\n        clearTimeout(failScrollTimeoutId.current);\n        scrollToIndexFailedRetryCountRef.current = 0;\n        flatListRef.current.scrollToIndex({\n          animated: true,\n          index: indexOfParentInMessageList,\n          viewPosition: 0.5, // try to place message in the center of the screen\n        });\n        // keep track of this messageId, so that we dont scroll to again in useEffect for targeted message change\n        messageIdLastScrolledToRef.current = messageId;\n        setTargetedMessage(messageId);\n        return;\n      }\n      messageIdToScrollToRef.current = messageId; // keep track of the id to scroll afterwards\n      loadChannelAroundMessage({ messageId }); // now try to load the message and whats around it\n      resetPaginationTrackersRef.current();\n    },\n    [messageList],\n  );\n\n  /**\n   * Check if a messageId needs to be scrolled to after list loads, and scroll to it\n   * Note: This effect fires on every list change with a small debounce so that scrolling isnt abrupted by an immediate rerender\n   */\n  useEffect(() => {\n    scrollToDebounceTimeoutRef.current = setTimeout(() => {\n      if (initialScrollToFirstUnreadMessage) {\n        initialScrollSettingTimeoutRef.current = setTimeout(() => {\n          // small timeout to ensure that handleScroll is called after scrollToIndex to set this flag\n          setInitialScrollDone(true);\n        }, 500);\n      }\n      // goToMessage method might have requested to scroll to a message\n      let messageIdToScroll: string | undefined = messageIdToScrollToRef.current;\n      if (targetedMessage && messageIdLastScrolledToRef.current !== targetedMessage) {\n        // if some messageId was targeted but not scrolledTo yet\n        // we have scroll to there after loading completes\n        messageIdToScroll = targetedMessage;\n      }\n      if (!messageIdToScroll) return;\n      const indexOfParentInMessageList = messageList.findIndex(\n        (message) => message?.id === messageIdToScroll,\n      );\n      if (indexOfParentInMessageList !== -1 && flatListRef.current) {\n        // By a fresh scroll we should clear the retries for the previous failed scroll\n        clearTimeout(failScrollTimeoutId.current);\n        scrollToIndexFailedRetryCountRef.current = 0;\n        flatListRef.current.scrollToIndex({\n          animated: false,\n          index: indexOfParentInMessageList,\n          viewPosition: 0.5, // try to place message in the center of the screen\n        });\n        // reset the messageId tracker to not scroll to that again\n        messageIdToScrollToRef.current = undefined;\n        // keep track of this messageId, so that we dont scroll to again for targeted message change\n        messageIdLastScrolledToRef.current = messageIdToScroll;\n      }\n    }, 150);\n    return () => {\n      clearTimeout(failScrollTimeoutId.current);\n      clearTimeout(scrollToDebounceTimeoutRef.current);\n      clearTimeout(initialScrollSettingTimeoutRef.current);\n    };\n  }, [targetedMessage, initialScrollToFirstUnreadMessage, messageList]);\n\n  const messagesWithImages =\n    legacyImageViewerSwipeBehaviour &&\n    messageList.filter((message) => {\n      const isMessageTypeDeleted = message.type === 'deleted';\n      if (!isMessageTypeDeleted && message.attachments) {\n        return message.attachments.some(\n          (attachment) =>\n            attachment.type === 'image' &&\n            !attachment.title_link &&\n            !attachment.og_scrape_url &&\n            (attachment.image_url || attachment.thumb_url),\n        );\n      }\n      return false;\n    });\n\n  /**\n   * This is for the useEffect to run again in the case that a message\n   * gets edited with more or the same number of images\n   */\n  const imageString =\n    legacyImageViewerSwipeBehaviour &&\n    messagesWithImages &&\n    messagesWithImages\n      .map((message) =>\n        message.attachments\n          ?.map((attachment) => attachment.image_url || attachment.thumb_url || '')\n          .join(),\n      )\n      .join();\n\n  const numberOfMessagesWithImages =\n    legacyImageViewerSwipeBehaviour && messagesWithImages && messagesWithImages.length;\n  const threadExists = !!thread;\n\n  useEffect(() => {\n    if (\n      legacyImageViewerSwipeBehaviour &&\n      isListActive &&\n      ((threadList && thread) || (!threadList && !thread))\n    ) {\n      setMessages(messagesWithImages as MessageType<StreamChatGenerics>[]);\n    }\n  }, [\n    imageString,\n    isListActive,\n    legacyImageViewerSwipeBehaviour,\n    numberOfMessagesWithImages,\n    threadExists,\n    threadList,\n  ]);\n\n  const stickyHeaderFormatDate =\n    stickyHeaderDate?.getFullYear() === new Date().getFullYear() ? 'MMM D' : 'MMM D, YYYY';\n  const tStickyHeaderDate =\n    stickyHeaderDate && !hideStickyDateHeader ? tDateTimeParser(stickyHeaderDate) : null;\n\n  const stickyHeaderDateString = useMemo(() => {\n    if (tStickyHeaderDate === null || hideStickyDateHeader) return null;\n    if (isDayOrMoment(tStickyHeaderDate)) return tStickyHeaderDate.format(stickyHeaderFormatDate);\n\n    return new Date(tStickyHeaderDate).toDateString();\n  }, [tStickyHeaderDate, stickyHeaderFormatDate, hideStickyDateHeader]);\n\n  const dismissImagePicker = () => {\n    if (!hasMoved && selectedPicker) {\n      setSelectedPicker(undefined);\n      closePicker();\n    }\n  };\n  const onScrollBeginDrag = () => !hasMoved && selectedPicker && setHasMoved(true);\n  const onScrollEndDrag = () => hasMoved && selectedPicker && setHasMoved(false);\n\n  const refCallback = (ref: FlatListType<MessageType<StreamChatGenerics>>) => {\n    flatListRef.current = ref;\n\n    if (setFlatListRef) {\n      setFlatListRef(ref);\n    }\n  };\n\n  const debugRef = useDebugContext();\n\n  const isDebugModeEnabled = __DEV__ && debugRef && debugRef.current;\n\n  if (isDebugModeEnabled) {\n    if (debugRef.current.setEventType) debugRef.current.setEventType('send');\n    if (debugRef.current.setSendEventParams)\n      debugRef.current.setSendEventParams({\n        action: thread ? 'ThreadList' : 'Messages',\n        data: messageList,\n      });\n  }\n\n  const renderListEmptyComponent = useCallback(\n    () => (\n      <View\n        style={[styles.flex, shouldApplyAndroidWorkaround ? styles.invertAndroid : styles.invert]}\n        testID='empty-state'\n      >\n        <EmptyStateIndicator listType='message' />\n      </View>\n    ),\n    [EmptyStateIndicator, shouldApplyAndroidWorkaround],\n  );\n\n  const ListFooterComponent = useCallback(\n    () => (\n      <View style={shouldApplyAndroidWorkaround ? styles.invertAndroid : undefined}>\n        <FooterComponent />\n      </View>\n    ),\n    [shouldApplyAndroidWorkaround, FooterComponent],\n  );\n\n  const ListHeaderComponent = useCallback(\n    () => (\n      <View style={shouldApplyAndroidWorkaround ? styles.invertAndroid : undefined}>\n        <HeaderComponent />\n      </View>\n    ),\n    [shouldApplyAndroidWorkaround, HeaderComponent],\n  );\n\n  if (!FlatList) return null;\n\n  if (loading) {\n    return (\n      <View style={styles.flex}>\n        <LoadingIndicator listType='message' />\n      </View>\n    );\n  }\n\n  const StickyHeaderComponent = () => {\n    if (!stickyHeaderDateString) return null;\n    if (StickyHeader) return <StickyHeader dateString={stickyHeaderDateString} />;\n    if (messageListLengthAfterUpdate) return <DateHeader dateString={stickyHeaderDateString} />;\n    return null;\n  };\n\n  // We need to omit the style related props from the additionalFlatListProps and add them directly instead of spreading\n  let additionalFlatListPropsExcludingStyle:\n    | Omit<NonNullable<typeof additionalFlatListProps>, 'style' | 'contentContainerStyle'>\n    | undefined;\n\n  if (additionalFlatListProps) {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { contentContainerStyle, style, ...rest } = additionalFlatListProps;\n    additionalFlatListPropsExcludingStyle = rest;\n  }\n\n  return (\n    <View\n      style={[styles.container, { backgroundColor: white_snow }, container]}\n      testID='message-flat-list-wrapper'\n    >\n      <FlatList\n        CellRendererComponent={\n          shouldApplyAndroidWorkaround ? InvertedCellRendererComponent : undefined\n        }\n        contentContainerStyle={[\n          styles.contentContainer,\n          additionalFlatListProps?.contentContainerStyle,\n          contentContainer,\n        ]}\n        data={messageList}\n        /** Disables the MessageList UI. Which means, message actions, reactions won't work. */\n        extraData={disabled || !hasNoMoreRecentMessagesToLoad}\n        inverted={shouldApplyAndroidWorkaround ? false : inverted}\n        keyboardShouldPersistTaps='handled'\n        keyExtractor={keyExtractor}\n        ListEmptyComponent={renderListEmptyComponent}\n        ListFooterComponent={ListFooterComponent}\n        ListHeaderComponent={ListHeaderComponent}\n        maintainVisibleContentPosition={{\n          autoscrollToTopThreshold: autoscrollToTop ? 10 : undefined,\n          minIndexForVisible: 1,\n        }}\n        maxToRenderPerBatch={30}\n        onScroll={handleScroll}\n        onScrollBeginDrag={onScrollBeginDrag}\n        onScrollEndDrag={onScrollEndDrag}\n        onScrollToIndexFailed={onScrollToIndexFailedRef.current}\n        onTouchEnd={dismissImagePicker}\n        onViewableItemsChanged={onViewableItemsChanged.current}\n        ref={refCallback}\n        renderItem={renderItem}\n        scrollEnabled={overlay === 'none'}\n        showsVerticalScrollIndicator={!shouldApplyAndroidWorkaround}\n        style={[\n          styles.listContainer,\n          listContainer,\n          additionalFlatListProps?.style,\n          shouldApplyAndroidWorkaround ? styles.invertAndroid : undefined,\n        ]}\n        testID='message-flat-list'\n        viewabilityConfig={flatListViewabilityConfig}\n        {...additionalFlatListPropsExcludingStyle}\n      />\n      {!loading && (\n        <>\n          <View style={styles.stickyHeader}>\n            <StickyHeaderComponent />\n          </View>\n          {!disableTypingIndicator && TypingIndicator && (\n            <TypingIndicatorContainer>\n              <TypingIndicator />\n            </TypingIndicatorContainer>\n          )}\n          <ScrollToBottomButton\n            onPress={goToNewMessages}\n            showNotification={scrollToBottomButtonVisible}\n            unreadCount={threadList ? 0 : channel?.countUnread()}\n          />\n        </>\n      )}\n      <NetworkDownIndicator />\n    </View>\n  );\n};\n\nexport type MessageListProps<\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n> = Partial<MessageListPropsWithContext<StreamChatGenerics>>;\n\nexport const MessageList = <\n  StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics,\n>(\n  props: MessageListProps<StreamChatGenerics>,\n) => {\n  const { closePicker, selectedPicker, setSelectedPicker } = useAttachmentPickerContext();\n  const {\n    channel,\n    disabled,\n    EmptyStateIndicator,\n    enableMessageGroupingByUser,\n    error,\n    hideStickyDateHeader,\n    isChannelActive,\n    loadChannelAroundMessage,\n    loading,\n    LoadingIndicator,\n    markRead,\n    NetworkDownIndicator,\n    reloadChannel,\n    scrollToFirstUnreadThreshold,\n    setTargetedMessage,\n    StickyHeader,\n    targetedMessage,\n  } = useChannelContext<StreamChatGenerics>();\n  const { client } = useChatContext<StreamChatGenerics>();\n  const { setMessages } = useImageGalleryContext<StreamChatGenerics>();\n  const {\n    DateHeader,\n    disableTypingIndicator,\n    FlatList,\n    initialScrollToFirstUnreadMessage,\n    InlineDateSeparator,\n    InlineUnreadIndicator,\n    legacyImageViewerSwipeBehaviour,\n    Message,\n    MessageSystem,\n    myMessageTheme,\n    ScrollToBottomButton,\n    TypingIndicator,\n    TypingIndicatorContainer,\n  } = useMessagesContext<StreamChatGenerics>();\n  const { hasNoMoreRecentMessagesToLoad, loadMore, loadMoreRecent } =\n    usePaginatedMessageListContext<StreamChatGenerics>();\n  const { overlay } = useOverlayContext();\n  const { loadMoreThread, thread } = useThreadContext<StreamChatGenerics>();\n  const { t, tDateTimeParser } = useTranslationContext();\n\n  return (\n    <MessageListWithContext\n      {...{\n        channel,\n        client,\n        closePicker,\n        DateHeader,\n        disabled,\n        disableTypingIndicator,\n        EmptyStateIndicator,\n        enableMessageGroupingByUser,\n        error,\n        FlatList,\n        hasNoMoreRecentMessagesToLoad,\n        hideStickyDateHeader,\n        initialScrollToFirstUnreadMessage,\n        InlineDateSeparator,\n        InlineUnreadIndicator,\n        isListActive: isChannelActive,\n        legacyImageViewerSwipeBehaviour,\n        loadChannelAroundMessage,\n        loading,\n        LoadingIndicator,\n        loadMore,\n        loadMoreRecent,\n        loadMoreThread,\n        markRead,\n        Message,\n        MessageSystem,\n        myMessageTheme,\n        NetworkDownIndicator,\n        overlay,\n        reloadChannel,\n        ScrollToBottomButton,\n        scrollToFirstUnreadThreshold,\n        selectedPicker,\n        setMessages,\n        setSelectedPicker,\n        setTargetedMessage,\n        StickyHeader,\n        t,\n        targetedMessage,\n        tDateTimeParser,\n        thread,\n        TypingIndicator,\n        TypingIndicatorContainer,\n      }}\n      {...props}\n      noGroupByUser={!enableMessageGroupingByUser || props.noGroupByUser}\n    />\n  );\n};\n"],"mappings":"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"}