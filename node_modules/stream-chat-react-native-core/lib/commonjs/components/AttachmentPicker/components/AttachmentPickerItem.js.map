{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_bottomSheet","_dayjs","_mimeTypes","_ThemeContext","_icons","_utils","_this","_jsxFileName","AttachmentVideo","props","asset","ImageOverlaySelectedComponent","maxNumberOfFiles","numberOfAttachmentPickerImageColumns","numberOfUploads","selected","setSelectedFiles","_useTheme","useTheme","_useTheme$theme","theme","_useTheme$theme$attac","attachmentPicker","durationText","image","imageOverlay","_useTheme$theme$color","colors","overlay","white","videoDuration","duration","uri","ONE_HOUR_IN_SECONDS","durationLabel","isDurationLongerThanHour","formattedDurationParam","formattedVideoDuration","dayjs","format","size","vw","onPressVideo","files","filter","file","Alert","alert","mimeType","lookup","filename","concat","_toConsumableArray2","id","name","fileSize","createElement","TouchableOpacity","onPress","__self","__source","fileName","lineNumber","columnNumber","ImageBackground","source","style","height","margin","width","View","styles","backgroundColor","videoView","Recorder","pathFill","Text","color","AttachmentImage","setSelectedImages","_useTheme2","_useTheme2$theme","_useTheme2$theme$atta","onPressImage","images","renderAttachmentPickerItem","_ref","item","isVideoType","type","includes","exports","StyleSheet","create","fontWeight","alignItems","flex","bottom","display","flexDirection","justifyContent","paddingHorizontal","position"],"sources":["AttachmentPickerItem.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Alert, ImageBackground, StyleSheet, Text, View } from 'react-native';\n\nimport { TouchableOpacity } from '@gorhom/bottom-sheet';\nimport dayjs from 'dayjs';\nimport { lookup } from 'mime-types';\n\nimport { useTheme } from '../../../contexts/themeContext/ThemeContext';\nimport { Recorder } from '../../../icons';\nimport type { Asset, File } from '../../../types/types';\nimport { vw } from '../../../utils/utils';\n\ntype AttachmentPickerItemType = {\n  asset: Asset;\n  ImageOverlaySelectedComponent: React.ComponentType;\n  maxNumberOfFiles: number;\n  numberOfUploads: number;\n  selected: boolean;\n  setSelectedFiles: React.Dispatch<React.SetStateAction<File[]>>;\n  setSelectedImages: React.Dispatch<React.SetStateAction<Asset[]>>;\n  numberOfAttachmentPickerImageColumns?: number;\n};\n\ntype AttachmentImageProps = Omit<AttachmentPickerItemType, 'setSelectedFiles'>;\n\ntype AttachmentVideoProps = Omit<AttachmentPickerItemType, 'setSelectedImages'>;\n\nconst AttachmentVideo: React.FC<AttachmentVideoProps> = (props) => {\n  const {\n    asset,\n    ImageOverlaySelectedComponent,\n    maxNumberOfFiles,\n    numberOfAttachmentPickerImageColumns,\n    numberOfUploads,\n    selected,\n    setSelectedFiles,\n  } = props;\n\n  const {\n    theme: {\n      attachmentPicker: { durationText, image, imageOverlay },\n      colors: { overlay, white },\n    },\n  } = useTheme();\n\n  const { duration: videoDuration, uri } = asset;\n\n  const ONE_HOUR_IN_SECONDS = 3600;\n\n  let durationLabel = '00:00';\n\n  if (videoDuration) {\n    const isDurationLongerThanHour = videoDuration / ONE_HOUR_IN_SECONDS >= 1;\n    const formattedDurationParam = isDurationLongerThanHour ? 'HH:mm:ss' : 'mm:ss';\n    const formattedVideoDuration = dayjs\n      .duration(videoDuration, 'second')\n      .format(formattedDurationParam);\n    durationLabel = formattedVideoDuration;\n  }\n\n  const size = vw(100) / (numberOfAttachmentPickerImageColumns || 3) - 2;\n\n  const onPressVideo = () => {\n    if (selected) {\n      setSelectedFiles((files) => files.filter((file) => file.uri !== asset.uri));\n    } else {\n      setSelectedFiles((files) => {\n        if (numberOfUploads >= maxNumberOfFiles) {\n          Alert.alert('Maximum number of files reached');\n          return files;\n        }\n        // We need a mime-type to upload a video file.\n        const mimeType = lookup(asset.filename) || 'multipart/form-data';\n        return [\n          ...files,\n          {\n            duration: durationLabel,\n            id: asset.id,\n            mimeType,\n            name: asset.filename,\n            size: asset.fileSize,\n            uri: asset.uri,\n          },\n        ];\n      });\n    }\n  };\n\n  return (\n    <TouchableOpacity onPress={onPressVideo}>\n      <ImageBackground\n        source={{ uri }}\n        style={[\n          {\n            height: size,\n            margin: 1,\n            width: size,\n          },\n          image,\n        ]}\n      >\n        {selected && (\n          <View style={[styles.overlay, { backgroundColor: overlay }, imageOverlay]}>\n            <ImageOverlaySelectedComponent />\n          </View>\n        )}\n        <View style={styles.videoView}>\n          <Recorder height={20} pathFill={white} width={25} />\n          {videoDuration ? (\n            <Text style={[styles.durationText, durationText, { color: white }]}>\n              {durationLabel}\n            </Text>\n          ) : null}\n        </View>\n      </ImageBackground>\n    </TouchableOpacity>\n  );\n};\n\nconst AttachmentImage: React.FC<AttachmentImageProps> = (props) => {\n  const {\n    asset,\n    ImageOverlaySelectedComponent,\n    maxNumberOfFiles,\n    numberOfAttachmentPickerImageColumns,\n    numberOfUploads,\n    selected,\n    setSelectedImages,\n  } = props;\n  const {\n    theme: {\n      attachmentPicker: { image, imageOverlay },\n      colors: { overlay },\n    },\n  } = useTheme();\n\n  const size = vw(100) / (numberOfAttachmentPickerImageColumns || 3) - 2;\n\n  const { uri } = asset;\n\n  const onPressImage = () => {\n    if (selected) {\n      setSelectedImages((images) => images.filter((image) => image.uri !== asset.uri));\n    } else {\n      setSelectedImages((images) => {\n        if (numberOfUploads >= maxNumberOfFiles) {\n          Alert.alert('Maximum number of files reached');\n          return images;\n        }\n        return [...images, asset];\n      });\n    }\n  };\n\n  return (\n    <TouchableOpacity onPress={onPressImage}>\n      <ImageBackground\n        source={{ uri }}\n        style={[\n          {\n            height: size,\n            margin: 1,\n            width: size,\n          },\n          image,\n        ]}\n      >\n        {selected && (\n          <View style={[styles.overlay, { backgroundColor: overlay }, imageOverlay]}>\n            <ImageOverlaySelectedComponent />\n          </View>\n        )}\n      </ImageBackground>\n    </TouchableOpacity>\n  );\n};\n\nexport const renderAttachmentPickerItem = ({ item }: { item: AttachmentPickerItemType }) => {\n  const {\n    asset,\n    ImageOverlaySelectedComponent,\n    maxNumberOfFiles,\n    numberOfAttachmentPickerImageColumns,\n    numberOfUploads,\n    selected,\n    setSelectedFiles,\n    setSelectedImages,\n  } = item;\n\n  /**\n   * Expo Media Library - Result of asset type\n   * Native Android - Gives mime type(Eg: image/jpeg, video/mp4, etc.)\n   * Native iOS - Gives `image` or `video`\n   * Expo Android/iOS - Gives `photo` or `video`\n   **/\n  const isVideoType = asset.type.includes('video');\n\n  if (isVideoType) {\n    return (\n      <AttachmentVideo\n        asset={asset}\n        ImageOverlaySelectedComponent={ImageOverlaySelectedComponent}\n        maxNumberOfFiles={maxNumberOfFiles}\n        numberOfAttachmentPickerImageColumns={numberOfAttachmentPickerImageColumns}\n        numberOfUploads={numberOfUploads}\n        selected={selected}\n        setSelectedFiles={setSelectedFiles}\n      />\n    );\n  }\n\n  return (\n    <AttachmentImage\n      asset={asset}\n      ImageOverlaySelectedComponent={ImageOverlaySelectedComponent}\n      maxNumberOfFiles={maxNumberOfFiles}\n      numberOfAttachmentPickerImageColumns={numberOfAttachmentPickerImageColumns}\n      numberOfUploads={numberOfUploads}\n      selected={selected}\n      setSelectedImages={setSelectedImages}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  durationText: {\n    fontWeight: 'bold',\n  },\n  overlay: {\n    alignItems: 'flex-end',\n    flex: 1,\n  },\n  videoView: {\n    bottom: 5,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingHorizontal: 5,\n    position: 'absolute',\n    width: '100%',\n  },\n});\n"],"mappings":"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"}